1.Decimal
*codeJam18 practise steed2

2.Combinations of fixed size array of array(vector)
*codeJam18 roundc aWholenewword

3.All the combination of all sizes
*main permuations

4.Loop
    Okay
    int qw[]={1,3,5,6};
    set<int> dd;
    long long jjj=0;
    for (int i = 0; i < 100000; i++)
    {
        for (int j = 0; j < 26; j++)
        {
            jjj++;
            // dd.insert(qw,qw+4);
            // qw[3]++;
        }
        /* code */
    }
    Okay if no insertion to set
    int qw[]={1,3,5,6};
    set<int> dd;
    long long jjj=0;
    for (int i = 0; i < 100000; i++)
    {
        for (int j = 0; j < 1000; j++)
        {
            jjj++;
            12+2;
            dd.insert(qw,qw+4);
        }
        /* code */
    }

    okay near1 second
    long long x=0;
    for (unsigned long long  i = 0; i < 245035000; i++)
    {
        /* code */
        x+=1;
    }
4.1 Loop(find all the )
    This take half a second ,10^5 works fine .for this global declaration
    //kickstart/19/g/bookreading
    #define lim 1000000
    vector<int> odata[lim];
    for (int i = 1; i < lim; i++)
    {
        int div = 1;
        int inc = 1;
        while (true)
        {
            div = i * inc;
            if (div > lim)
            {
                break;
            }
            else
            {
                odata[i].push_back(div);
                inc++;
            }
        }
    }

5. String to unsigned long long and int and char to int
    //kickstt 18 a evendigits
    unsigned long long a1=stoull("12345678923456788", nullptr, 10);
    int a='2'-'0';

6. 2D Can search in a row but no helper function to find by column
7. 2D vector sort by column find by column erase first element 
    //main dijkasthra

8. Array of vectors vector <int> A[5];

9. memset memset(myarray, 0, sizeof(myarray));


10. check if string starts with
    string s1="eedsvf"
     if (s1.rfind("ee", 0) == 0)
     {
     }


11. Int array to string
    string s;
    int arr[] = {77, 88, 26, 2, 1};
    for (int i = 0; i < 5; i++)
    {
        s += to_string(arr[i]);
    }

    cout << s << "\n";


12. String contain substring
    string ss="wqee";

    cout<<(ss.find("w")==string::npos);